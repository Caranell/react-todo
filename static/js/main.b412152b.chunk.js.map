{"version":3,"sources":["components/TodoItem.jsx","components/TodoList.jsx","actions/index.js","components/AddTodo.jsx","components/Filter.jsx","components/Footer.jsx","containers/Todos.jsx","App.js","reducers/items.js","reducers/filter.js","reducers/index.js","store/index.js","store/localStorage.js","index.js"],"names":["useStyles","makeStyles","done","text-decoration","standard","TodoItem","_ref","completed","text","toggleComplete","deleteItem","classes","react_default","a","createElement","Grid","item","FormControlLabel","control","Checkbox","icon","CheckBoxOutlineBlank_default","fontSize","checkedIcon","CheckBox_default","value","checked","onClick","label","className","IconButton","aria-label","Delete_default","TodoList","items","react","map","components_TodoItem","Object","assign","key","id","FILTERS","connect","dispatch","TextField","multiline","rowsMax","onKeyPress","e","target","trim","type","uuid","v4","helperText","state","ownProps","active","filter","activeFilter","children","Button","disabled","Footer","amount","InputBase","inputProps","ButtonGroup","size","components_Filter","getFilteredItems","Error","Todos","_this$props","this","props","toggleItem","container","direction","justify","alignItems","components_AddTodo","components_TodoList","components_Footer","length","Component","App","containers_Todos","INITIAL_STATE","arguments","undefined","action","concat","toConsumableArray","objectSpread","rootReducer","combineReducers","persistedState","jsonState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","subscribe","stringState","stringify","setItem","console","log","saveState","getState","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.b412152b.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles({\r\n\tdone: {\r\n\t\t'text-decoration': 'line-through'\r\n\t},\r\n\tstandard: {}\r\n});\r\n\r\nconst TodoItem = ({ completed, text, toggleComplete, deleteItem }) => {\r\n\tconst classes = useStyles();\r\n\treturn (\r\n\t\t<Grid item>\r\n\t\t\t<FormControlLabel\r\n\t\t\t\tcontrol={\r\n\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\ticon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\r\n\t\t\t\t\t\tcheckedIcon={<CheckBoxIcon fontSize=\"small\" />}\r\n\t\t\t\t\t\tvalue=\"checkedI\"\r\n\t\t\t\t\t\tchecked={completed}\r\n\t\t\t\t\t\tonClick={toggleComplete}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\tlabel={text}\r\n\t\t\t\tclassName={completed ? classes.done : classes.standard}\r\n\t\t\t/>\r\n\t\t\t<IconButton\r\n\t\t\t\taria-label=\"delete\"\r\n\t\t\t\tclassName=\"makeStyles-margin-36\"\r\n\t\t\t\tonClick={deleteItem}\r\n\t\t\t>\r\n\t\t\t\t<DeleteIcon fontSize=\"small\" />\r\n\t\t\t</IconButton>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nTodoItem.propTypes = {\r\n\ttext: PropTypes.string.isRequired,\r\n\tcompleted: PropTypes.bool.isRequired,\r\n\ttoggleComplete: PropTypes.func.isRequired,\r\n\tdeleteItem: PropTypes.func.isRequired\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Fragment } from 'react';\r\n\r\nimport TodoItem from './TodoItem';\r\n\r\nconst TodoList = ({ items, toggleComplete, deleteItem }) => (\r\n\t<Fragment>\r\n\t\t{items.map(item => (\r\n\t\t\t<TodoItem\r\n\t\t\t\tkey={item.id}\r\n\t\t\t\t{...item}\r\n\t\t\t\ttoggleComplete={() => toggleComplete(item.id)}\r\n\t\t\t\tdeleteItem={() => deleteItem(item.id)}\r\n\t\t\t/>\r\n\t\t))}\r\n\t</Fragment>\r\n);\r\n\r\nTodoList.propTypes = {\r\n\titems: PropTypes.arrayOf(\r\n\t\tPropTypes.shape({\r\n\t\t\tid: PropTypes.string.isRequired,\r\n\t\t\tcompleted: PropTypes.bool.isRequired,\r\n\t\t\ttext: PropTypes.string.isRequired\r\n\t\t}).isRequired\r\n\t).isRequired,\r\n\ttoggleComplete: PropTypes.func.isRequired,\r\n\tdeleteItem: PropTypes.func.isRequired\r\n};\r\n\r\nexport default TodoList;\r\n","import uuid from 'uuid';\r\n\r\nexport const addItem = text => ({\r\n\ttype: 'ADD_ITEM',\r\n\tid: uuid.v4(),\r\n\ttext, \r\n\tcompleted: false\r\n});\r\n\r\nexport const setFilter = filter => ({\r\n\ttype: 'SET_FILTER',\r\n\tfilter\r\n});\r\n\r\nexport const toggleItem = id => ({\r\n\ttype: 'TOGGLE_ITEM',\r\n\tid\r\n});\r\n\r\nexport const deleteItem = id => ({\r\n\ttype: 'DELETE_ITEM',\r\n\tid\r\n});\r\n\r\nexport const FILTERS = {\r\n\tALL: 'ALL',\r\n\tACTIVE: 'ACTIVE',\r\n\tCOMPLETED: 'COMPLETED'\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addItem } from '../actions';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst AddTodo = ({ dispatch }) => (\r\n\t<Grid item>\r\n\t\t<TextField\r\n\t\t\tmultiline\r\n\t\t\trowsMax=\"2\"\r\n\t\t\tonKeyPress={e => {\r\n\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\tconst value = e.target.value.trim();\r\n\t\t\t\t\tif (value !== '') {\r\n\t\t\t\t\t\tdispatch(addItem(value));\r\n\t\t\t\t\t}\r\n\t\t\t\t\te.target.value = '';\r\n\t\t\t\t}\r\n\t\t\t}}\r\n\t\t\thelperText=\"press Enter to add new one\"\r\n\t\t/>\r\n\t</Grid>\r\n);\r\n\r\nexport default connect()(AddTodo);\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { connect } from 'react-redux';\r\nimport { setFilter } from '../actions';\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n\treturn {\r\n\t\tactive: ownProps.filter === state.activeFilter\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n\tonClick: () => dispatch(setFilter(ownProps.filter))\r\n});\r\n\r\nconst Filter = ({ active, children, onClick }) => {\r\n\treturn (\r\n\t\t<Button disabled={active} onClick={onClick}>\r\n\t\t\t{children}\r\n\t\t</Button>\r\n\t);\r\n};\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(Filter)","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Filter from './Filter';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { FILTERS } from '../actions';\r\n\r\nconst Footer = ({ amount}) => (\r\n\t<Grid item>\r\n\t\t<InputBase inputProps={{ value: 'Number of items: ' + amount }} />\r\n\t\t<ButtonGroup size=\"small\" aria-label=\"small outlined button group\">\r\n\t\t\t<Filter filter={FILTERS.ALL}>ALL</Filter>\r\n\t\t\t<Filter filter={FILTERS.ACTIVE}>ACTIVE</Filter>\r\n\t\t\t<Filter filter={FILTERS.COMPLETED}>COMPLETED</Filter>\r\n\t\t</ButtonGroup>\r\n\t</Grid>\r\n);\r\n\r\nFooter.propTypes = {\r\n\tamount: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TodoList from '../components/TodoList';\r\nimport AddTodo from '../components/AddTodo';\r\nimport Footer from '../components/Footer';\r\n\r\nimport { toggleItem, deleteItem } from '../actions';\r\nimport { FILTERS } from '../actions';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst getFilteredItems = (items, filter) => {\r\n\tswitch (filter) {\r\n\t\tcase FILTERS.ALL:\r\n\t\t\treturn items;\r\n\t\tcase FILTERS.ACTIVE:\r\n\t\t\treturn items.filter(item => !item.completed);\r\n\t\tcase FILTERS.COMPLETED:\r\n\t\t\treturn items.filter(item => item.completed);\r\n\t\tdefault:\r\n\t\t\tthrow new Error('Cannot recognize filter');\r\n\t}\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\titems: getFilteredItems(state.items, state.activeFilter)\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\ttoggleItem: id => dispatch(toggleItem(id)),\r\n\tdeleteItem: id => dispatch(deleteItem(id))\r\n});\r\n\r\nclass Todos extends Component {\r\n\trender() {\r\n\t\tconst { toggleItem, deleteItem, items } = this.props;\r\n\t\treturn (\r\n\t\t\t<Grid\r\n\t\t\t\tcontainer\r\n\t\t\t\tdirection=\"column\"\r\n\t\t\t\tjustify=\"space-around\"\r\n\t\t\t\talignItems=\"center\"\r\n\t\t\t>\r\n\t\t\t\t<AddTodo />\r\n\t\t\t\t<TodoList\r\n\t\t\t\t\titems={items}\r\n\t\t\t\t\ttoggleComplete={toggleItem}\r\n\t\t\t\t\tdeleteItem={deleteItem}\r\n\t\t\t\t/>\r\n\t\t\t\t<Footer amount={items.length} />\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(Todos);\r\n","import React from 'react';\nimport './App.css';\nimport Todos from './containers/Todos';\n\nconst App = () => (\n    <Todos />\n)\n\nexport default App;\n","import uuid from 'uuid';\r\n\r\nconst INITIAL_STATE = [\r\n\t{\r\n\t\tid: uuid.v4(),\r\n\t\ttext: 'visit doctor',\r\n\t\tcompleted: false\r\n\t},\r\n\t{\r\n\t\tid: uuid.v4(),\r\n\t\ttext: 'buy milk',\r\n\t\tcompleted: true\r\n\t},\r\n\t{\r\n\t\tid: uuid.v4(),\r\n\t\ttext: 'play mario',\r\n\t\tcompleted: true\r\n\t}\r\n]\r\n\r\nconst items = (state = INITIAL_STATE, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'ADD_ITEM': return [\r\n\t\t\t...state,\r\n\t\t\t{\r\n\t\t\t\tid: action.id,\r\n\t\t\t\ttext: action.text,\r\n\t\t\t\tcompleted: false\r\n\t\t\t}\r\n\t\t];\r\n\t\tcase 'TOGGLE_ITEM':\r\n\t\t\treturn state.map(item =>\r\n\t\t\t\titem.id === action.id\r\n\t\t\t\t\t? { ...item, completed: !item.completed }\r\n\t\t\t\t\t: item);\r\n\t\tcase 'DELETE_ITEM':\r\n\t\t\treturn state.filter(item =>\r\n\t\t\t\titem.id !== action.id);\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default items;","import { FILTERS } from '../actions';\r\n\r\nconst activeFilter = (state = FILTERS.ALL, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'SET_FILTER':\r\n\t\t\treturn action.filter;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default activeFilter;","import { combineReducers } from 'redux';\r\nimport items from './items';\r\nimport activeFilter from './filter';\r\n\r\nconst rootReducer=combineReducers({\r\n\titems, \r\n\tactiveFilter\r\n});\r\n\r\nexport default rootReducer;\r\n","import rootReducer from '../reducers';\r\nimport { createStore } from 'redux';\r\nimport { loadState, saveState } from './localStorage';\r\n\r\nconst persistedState = loadState();\r\nconst store = createStore(\r\n\trootReducer,\r\n\tpersistedState\r\n);\r\n\r\nstore.subscribe(() => {\r\n\tsaveState({\r\n\t\titems: store.getState().items\r\n\t});\r\n});\r\n\r\nexport default store;","export const loadState = () => {\r\n\ttry {\r\n\t\tconst jsonState = localStorage.getItem('state');\r\n\t\tif (jsonState === null) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t\treturn JSON.parse(jsonState);\r\n\t} catch (err) {\r\n\t\treturn undefined;\r\n\t}\r\n};\r\n\r\nexport const saveState = (state) => {\r\n\ttry {\r\n\t\tconst stringState = JSON.stringify(state);\r\n\t\tlocalStorage.setItem('state', stringState);\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t}\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}